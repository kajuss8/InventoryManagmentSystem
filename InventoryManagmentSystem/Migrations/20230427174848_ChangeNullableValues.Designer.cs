// <auto-generated />
using System;
using InventoryManagmentSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryManagmentSystem.Migrations
{
    [DbContext(typeof(InventoryManagmentDbContext))]
    [Migration("20230427174848_ChangeNullableValues")]
    partial class ChangeNullableValues
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InventoryManagmentSystem.Entitys.Account", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid?>("PersonInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.HasIndex("PersonInformationId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("InventoryManagmentSystem.Entitys.LivingPlaceInformation", b =>
                {
                    b.Property<Guid>("LivingPlaceInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FlatNumber")
                        .HasColumnType("int");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LivingPlaceInformationId");

                    b.ToTable("LivingPlaceInformation");
                });

            modelBuilder.Entity("InventoryManagmentSystem.Entitys.PersonInformation", b =>
                {
                    b.Property<Guid>("PersonInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LivingPlaceInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonInformationId");

                    b.HasIndex("LivingPlaceInformationId");

                    b.ToTable("PersonInformation");
                });

            modelBuilder.Entity("InventoryManagmentSystem.Entitys.Account", b =>
                {
                    b.HasOne("InventoryManagmentSystem.Entitys.PersonInformation", "PersonInformation")
                        .WithMany()
                        .HasForeignKey("PersonInformationId");

                    b.Navigation("PersonInformation");
                });

            modelBuilder.Entity("InventoryManagmentSystem.Entitys.PersonInformation", b =>
                {
                    b.HasOne("InventoryManagmentSystem.Entitys.LivingPlaceInformation", "LivingPlaceInformation")
                        .WithMany()
                        .HasForeignKey("LivingPlaceInformationId");

                    b.Navigation("LivingPlaceInformation");
                });
#pragma warning restore 612, 618
        }
    }
}
